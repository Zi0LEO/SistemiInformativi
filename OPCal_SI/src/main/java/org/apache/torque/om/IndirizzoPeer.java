package org.apache.torque.om;

import org.apache.torque.TorqueException;
import org.apache.torque.criteria.Criteria;

import java.util.List;

/**
 * The skeleton for this class was autogenerated by Torque on:
 * <p>
 * [Wed Mar 05 18:43:07 CET 2025]
 * <p>
 * This class provides static wrappers for the peer implementation classes.
 * This class will only be generated as long as it does not already exist
 * in the output directory.
 */

public class IndirizzoPeer
    extends org.apache.torque.om.BaseIndirizzoPeer {

  public static List<Indirizzo> ordinaIndirizzi(int criterio, boolean crescente) throws TorqueException {
    Criteria criteria = new Criteria();
    switch (criterio) {
      case 0:
        if (crescente) {
          criteria.addAscendingOrderByColumn(COMUNE);
          criteria.addAscendingOrderByColumn(VIA);
          criteria.addAscendingOrderByColumn(CIVICO);
        } else {
          criteria.addDescendingOrderByColumn(COMUNE);
          criteria.addDescendingOrderByColumn(VIA);
          criteria.addDescendingOrderByColumn(CIVICO);
        }
        break;
      case 1:
        if (crescente) {
          criteria.addAscendingOrderByColumn(ClientePeer.COGNOME);
          criteria.addAscendingOrderByColumn(ClientePeer.NOME);
        } else {
          criteria.addDescendingOrderByColumn(ClientePeer.NOME);
          criteria.addDescendingOrderByColumn(ClientePeer.COGNOME);
        }
        break;
    }
    return IndirizzoPeer.doSelectJoinCliente(criteria);
  }

}